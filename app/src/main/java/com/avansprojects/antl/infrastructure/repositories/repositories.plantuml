@startuml

title __REPOSITORIES's Class Diagram__\n

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class ContactRepository {
          - mAllContacts : LiveData<List<Friend>>
          + ContactRepository()
          + insert()
          + deleteAll()
          + deleteByName()
          + getAllRelationships()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class insertAsyncTask {
          ~ insertAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class deleteSingleAsyncTask {
          ~ deleteSingleAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class deleteAsyncTask {
          ~ deleteAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class EventDateRepository {
          - mAllEventDates : LiveData<List<EventDate>>
          + EventDateRepository()
          + insertAll()
          + getAllEvents()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class insertAllAsyncTask {
          ~ insertAllAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class EventRepository {
          - mAllEvents : LiveData<List<Event>>
          + EventRepository()
          + insert()
          + insertRetrieveId()
          + getAllEvents()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class insertAsyncTask {
          ~ insertAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class insertRetrieveIdAsyncTask {
          ~ insertRetrieveIdAsyncTask()
          # doInBackground()
          # onPostExecute()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class UserRepository {
          - mUsers : LiveData<List<User>>
          + UserRepository()
          + insert()
          + getUsers()
      }
    }
  }
  

  package com.avansprojects.antl {
    package com.avansprojects.antl.infrastructure.repositories {
      class insertAsyncTask {
          ~ insertAsyncTask()
          # doInBackground()
      }
    }
  }
  

  ContactRepository o-- FriendDao : mContacts
  ContactRepository +-down- insertAsyncTask
  ContactRepository +-down- deleteSingleAsyncTask
  ContactRepository +-down- deleteAsyncTask
  insertAsyncTask -up-|> AsyncTask
  insertAsyncTask o-- FriendDao : _AsyncTaskDao
  deleteSingleAsyncTask -up-|> AsyncTask
  deleteSingleAsyncTask o-- FriendDao : _AsyncTaskDao
  deleteAsyncTask -up-|> AsyncTask
  deleteAsyncTask o-- FriendDao : _AsyncTaskDao
  EventDateRepository o-- EventDateDao : mEventDateDao
  EventDateRepository +-down- insertAllAsyncTask
  insertAllAsyncTask -up-|> AsyncTask
  insertAllAsyncTask o-- EventDateDao : mAsyncTaskDao
  EventRepository o-- EventDao : mEventDao
  EventRepository +-down- insertAsyncTask
  EventRepository +-down- insertRetrieveIdAsyncTask
  insertAsyncTask -up-|> AsyncTask
  insertAsyncTask o-- AsyncTaskListener : mAsyncTaskListener
  insertAsyncTask o-- EventDao : mAsyncTaskDao
  insertRetrieveIdAsyncTask -up-|> AsyncTask
  insertRetrieveIdAsyncTask o-- AsyncTaskListener : mAsyncTaskListener
  insertRetrieveIdAsyncTask o-- EventDao : mAsyncTaskDao
  UserRepository o-- UserDao : mUserDao
  UserRepository +-down- insertAsyncTask
  insertAsyncTask -up-|> AsyncTask
  insertAsyncTask o-- UserDao : _AsyncTaskDao


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
